Grading at Thu 07 Mar 2024 02:14:49 AM UTC
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
- Test passed
Testing add_empty_card(deck_t *)
- Test passed
Testing make_deck_exclude(deck_t *)
- Test passed
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
Testing with 2 hands
Testing with 3 hands
Testing with 4 hands
Testing with 5 hands
Testing with 6 hands
- Test passed
Testing get_match_count(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==448== Memcheck, a memory error detector
==448== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==448== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==448== Command: ./tester gmc
==448== Parent PID: 447
==448== 
==448== Invalid read of size 8
==448==    at 0x109D7E: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==448==    by 0x10CB96: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==448==    by 0x10CE99: main (in /graderhome/work/c4prj1_deck/tester)
==448==  Address 0x4a450d8 is 8 bytes before a block of size 8 alloc'd
==448==    at 0x483B723: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==448==    by 0x483E017: realloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==448==    by 0x10B60D: my_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==448==    by 0x10CAE4: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==448==    by 0x10CE99: main (in /graderhome/work/c4prj1_deck/tester)
==448== 
==448== Invalid read of size 4
==448==    at 0x109D81: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==448==    by 0x10CB96: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==448==    by 0x10CE99: main (in /graderhome/work/c4prj1_deck/tester)
==448==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==448== 
==448== 
==448== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==448==  Access not within mapped region at address 0x0
==448==    at 0x109D81: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==448==    by 0x10CB96: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==448==    by 0x10CE99: main (in /graderhome/work/c4prj1_deck/tester)
==448==  If you believe this happened as a result of a stack
==448==  overflow in your program's main thread (unlikely but
==448==  possible), you can try to increase the size of the
==448==  main thread stack using the --main-stacksize= flag.
==448==  The main thread stack size used in this run was 8388608.
==448== 
==448== HEAP SUMMARY:
==448==     in use at exit: 72 bytes in 8 blocks
==448==   total heap usage: 8 allocs, 0 frees, 72 bytes allocated
==448== 
==448== LEAK SUMMARY:
==448==    definitely lost: 0 bytes in 0 blocks
==448==    indirectly lost: 0 bytes in 0 blocks
==448==      possibly lost: 0 bytes in 0 blocks
==448==    still reachable: 72 bytes in 8 blocks
==448==         suppressed: 0 bytes in 0 blocks
==448== Rerun with --leak-check=full to see details of leaked memory
==448== 
==448== For lists of detected and suppressed errors, rerun with: -s
==448== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: B
